//la explicaci칩n del c칩digo est치 en appexplicaciones.js

// se declaran con valor 0 pero se les asigna valor en la funci칩n condicionesIniciales
let numeroSecreto = 0;
let intentos = 0;
//aqu칤 generamos una variable que almacena el array que ser치 usado, este est치 vac칤o
let listaNumerosSorteados = [];
let maximoIntentos = 10;
//console.log(numeroSecreto);

function asignarTextoElemento(elemento, texto) {
  let elementoHTML = document.querySelector(elemento);
  elementoHTML.innerHTML = texto;
}

/* esta funci칩n es en la que estamos llegando a lo que se escribe en el input de html, 
esto lo hacemos a trav칠s de get.elementById, as칤 llegamos al input, y con.value accedemos al valor que se coloc칩 en ese input 
Tambi칠n es imporante ver que se est치 colocando un parseInt para que el valor que al ser ingresado es tomado como string, sea tomado como n칰mero*/
function verificarIntento() {
  let numeroDeUsuario = parseInt(document.getElementById("valorUsuario").value);

  console.log(numeroSecreto);

  /*console.log(`El n칰mero del usuario es ${numeroDeUsuario}`);
  //typeof es una manera de saber que tipo de dato es el que est치 almacenado en esa variable
  console.log(typeof numeroDeUsuario);

  console.log(typeof numeroSecreto);
  aqu칤 estamos comprobando si hay igualdad entre el n칰mero de usuario y n칰mero secreto. El resultado ser치 un boolean (true/false) */

  if (numeroDeUsuario === numeroSecreto) {
    /*
    Al igual que en el primer curso se usa condicionales, si el numero dado es igual al secreto
      autom치ticamente lanza el mensaje de acierto, de lo contrario pasa al else, donde se anido un if
      en caso de que sea mayor o un else en caso de que sea menor como pistas para el usuario 
      
      Dentro el par치metro de la funci칩n estamos usando un template string, esto para poder indicar cuantos intentos llevamos y se usa un operador ternario (que no es otra cosas que una manera abreviada de hacer un if/else) para que SI AL PRIMER INTENTO SE ADIVINA se ponga la palabra intento, DE LO CONTRARIO se colocar치 intentos 
  */
    asignarTextoElemento(
      "p",
      `Acertaste el n칰mero secreto en ${intentos} ${
        intentos === 1 ? "intento" : "intentos"
      } 游꿀游꿀`
    );
    /* Con este document estamos accediendo por DOM al elemento por su id, en este caso es el bot칩n al que
    est치 asociado reiniciar, ah칤 le decimos que queremos que remueva el atributo inactivo que tiene en el 
    lado del HTML y as칤 el bot칩n se active */
    document.getElementById("reiniciar").removeAttribute("disabled");
  } else {
    if (numeroDeUsuario > numeroSecreto) {
      asignarTextoElemento("p", "El numero es mayor al n칰mero secreto");
    } else {
      asignarTextoElemento("p", "El numero es menor al n칰mero secreto");
    }
    intentos++;
    // aqu칤 se est치 llamando la funci칩n para limpiar la caja
    limpiarCaja();
  }

  return;
}

/* Esta funci칩n est치 limpiando la caja de texto, llama por document query selector al id de la caja
y rescata el valor que contiene, a este valor le reasigna "" que es lo que permite que quede vac칤a */
function limpiarCaja() {
  document.querySelector("#valorUsuario").value = "";
}

/* En esta funci칩n se est치n haciendo los c치lculos para que pueda generar el n칰mero al azar */

function generarNumeroSecreto() {
  //metemos dentro de una variable la generaci칩n del n칰mero al que sea entre 1 y 10
  let numeroGenerado = Math.floor(Math.random() * maximoIntentos) + 1;
  //console.log de control, para poder ver el numero generado y la lista de array
  console.log(numeroGenerado);
  console.log(listaNumerosSorteados);

  /* Para evitar caer en un loop se genera una condici칩n if donde se establece como condici칩n que s칤
  el tama침o de la lista de elementos dentro del array es igual al m치ximo de intentos definidos dentro 
  de la variable que lleva ese n칰mero, entonces deber치 asignarle al p치rrafo el texto de que ya se 
  sortearon todos los n칰meros posibles, de lo contrario har치 lo descrito en el if/else anidado*/
  if (listaNumerosSorteados.length == maximoIntentos) {
    asignarTextoElemento("p", "ya se sortearon todos los n칰meros posibles");
  } else {
    if (listaNumerosSorteados.includes(numeroGenerado)) {
      //haz la recursividad, como ya est치 necesito que generes un nuevo n칰mero
      return generarNumeroSecreto();
      //de lo contrario, si no est치...
    } else {
      //agregalo al array de listaNumerosSorteados al elemento numeroGenerado
      listaNumerosSorteados.push(numeroGenerado);
      // muestra (regresa pues, s치calo) el numeroGenerado
      return numeroGenerado;
    }
  }
}
//Si el n칰mero generado est치 en la lista..

/* En esta funci칩n se establecen todas las condiciones que se necesitan para inicializar el juego, como es
la asignaci칩n de los textos en h1 y p, con cuantos intentos se inicia el juego (al menos necesita intentarse
 una vez para ganar y se debe generar un n칰mero secreto
 ) */
function condicionesIniciales() {
  asignarTextoElemento("h1", "Juego del n칰mero secreto");
  asignarTextoElemento("p", `Adivina un n칰mero entre 1 y ${maximoIntentos}`);
  intentos = 1;
  numeroSecreto = generarNumeroSecreto();
}

/* Esta funci칩n es llamada al dar clic en el bot칩n de nuevo juego y llama a las funciones de limpiar caja,
y re establece las condiciones inciales con la funci칩n condicionesIniciales. Tambi칠n llama al bot칩n con 
su id de "reiniciar" y le establece el atributo, para hacerlo este recibe dos par치metros: el atributo que 
ser치 cambiado y el valor (booleano) que se le asignar치, en este caso desabilitado se marca como verdadero*/
function reiniciarJuego() {
  //limpiar la caja
  limpiarCaja();
  condicionesIniciales();
  //deshabilitar el bot칩n de iniciar nuevo juego
  document.querySelector("#reiniciar").setAttribute("disabled", "true");
}

// Ahora en lugar de llamar a asignarTextoElemento, se llama a condicionesIniciales, ya que llama a todas las cosas que deben ser pre-configuradas para el juego como lo es: los textos, el n칰mero de intentos y la generaci칩n de un n칰mero aleatorio
condicionesIniciales();
